# -*- coding: utf-8 -*-
"""python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1butSASR_c2hJqAYYzxC0h-9g4GvXvqbp
"""

print("Reham M. Alswaisi")

x = 5
print(x)

y = 2
print(y)
# type => To print the data type
type(y)

z = "Reham"
print(z)
type(z)

count = 0 
while (count < 25 ) :
  print ("The count is: " , count)
  count = count + 2

print ("Reham M. Alswaisi")

import webbrowser

import time

start_time = time.ctime()

try:
  fh = open("test","w")
  fh.write("this is my test file for exception handling!!")
except IOError:
  print ("Error: can't find file or read data")
else:
  print ("Written content in the file successfully") 
  fh.close()

count = 0
while (count <= 10):
  print("The count is:", count)
  count = count +1

for letter in 'Reham':
  print("Current Letter:", letter)

fruits = ["apple", "banana","mango"]
for fruit in fruits:
  print ("Current fruit:", fruit)

for x in range(1,20):
  print (x)
  x = x+1

i = 1
while (i<5):
  s=""
  j=1
  while(j<10):
    s=s+"*"
    j=j+1
  print (s)
  i = i+1

for letter in "Reham":
  if letter == "m":
    break
  print("Current Letter:",letter)  

var = 10
while var > 0:
  var = var -1
  if var == 5:
    break
  print("Current varible value:", var)

for letter in "Reham":
  if letter == "m":
    continue
  print("Current Letter:",letter)  

var = 10
while var > 0:
  var = var -1
  if var == 5:
    continue
  print("Current varible value:", var)

from pyowm import OWM
API_key = "22967b8e9f31970fe31ed83ba1b11630"
owm = OWM(API_key)

observation = owm.weather_at_place("palestine, gaza")
w = observation.get.weather()

import os

filelist = os.listdir(r"E:\image")
print(filelist)
savedpath = os.getcwd()
os.chdir(r"E:\image")
for filename in filelist:
  print(filename)
  os.rename(filename, filename.translate(None,"0123456789"))
  os.chdir(savedpath)

for star in range(6):
  s=""
  for col in range(star):
    s=s + "*"
  print (s)  

print ("")
row = 6
while row >=1:
  s=""
  col=1
  while col <= row:
    s=s+"*"
    col=col+1
  print (s)
  row = row-1

count = 0
for l in "python":
  for j in "PSUT":
    count= count+1
  count= count+1  
  print(count)

def sayhello():
  print("Rham")
sayhello()

def add(a,b):
  print(a+b)
add(20,81)

def add(x,y=5):
  return x+y
add(3)

employee = {"Reham":200, "azoz":500,"joe":600}
def updateEmployeeByRef(employee):
  newEmployee = {"warda":500,"M":800}
  employee.update(newEmployee)
  print("inside the func update Employee ByRef", employee)

updateEmployeeByRef(employee)
print("outside the func update Employee ByRef", employee)

x=5
def updateXByVal(x):
  x = x + 10
  print ("inside the fun updateXByVal", x)

updateXByVal(x)
print ("outside the fun updateXByVal", x)

class Employee:
  "commen base class for all employees"
  empCount=0

  def __init__(self,name,salary):
    self.name = name
    self.salary = salary
    Employee.empCount += 1

    def displyCount(self):
      print("Total Employee %d" % Employee.empCount)

    def displyEmployee(self):
      print("Name:",self.name,", Salary:", self.salary)

"This would create first object of Employee calss"
emp1 = Employee("Reham",5000)
"This would create second object of Employee calss"
emp2 = Employee("Aboood", 51250)
print(emp1)
print(emp1)
type(emp1)
print(Employee)
type(Employee)
print(emp1,Employee)
isinstance(emp1,Employee)

import turtle

def drawsquare():
  window = turtle.Screen()
  window.bgcolor("red")
  p=turtle.Turtle()
  p.shape("turtle")
  p.color("yelllow")

  p.forward(100)
  p.right(90)
  p.forward(100)
  p.right(90)
  p.forward(100)
  p.right(90)
  p.forward(100)
  p.right(90)
  window.exitonclick()

drawsquare()

x=5
def test(x):
  x=x+3
  test(x)
print(x)